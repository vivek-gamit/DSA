//Given two strings s1 and s2, write a function to return true if s2 contains a permutation of s1.

#include <iostream>
#include <string>
#include <vector>
using namespace std;

bool checkInclusion(string s1, string s2) {
    int len1 = s1.length();
    int len2 = s2.length();

    if(len1 > len2) return false;

    vector<int> freq1(26,0), freq2(26,0);
    for(int i=0; i<len1; i++){
        freq1[s1[i] - 'a']++;
        freq2[s2[i] - 'a']++;
    }

    for(int i=len1; i<len2; i++){
        if(freq1 == freq2) return true;

        freq2[s2[i] - 'a']++;
        freq2[s2[i-len1] - 'a']--;
    }

    return freq1 == freq2;
}

int main() {
    string s1 = "ab", s2 = "eidbaooo";

    if (checkInclusion(s1, s2)) {
        cout << "True: Permutation exists in s2." << endl;
    } else {
        cout << "False: No permutation found in s2." << endl;
    }

    return 0;
}
